#!/data/data/com.termux/files/usr/bin/bash

# Arte ASCII inicial (para op√ß√£o 1)
ascii_scan="‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚¢Å‚†≤‚†í‚†Ñ‚°Ñ‚†Ñ‚†Ñ‚°Ñ‚†Ñ‚†Ñ‚†Ñ‚†∏‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†Ä‚†Ä
‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†Ñ‚†Ñ‚£†‚°Ç‚†°‚†Ñ‚†Å‚†Å‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†Ä‚†Ä
‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†Ñ‚°Ä‚£ø‚£∑‚£Ñ‚†Ñ‚¢Ä‚†Ñ‚†∏‚°Ä‚†Å‚†Ñ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†Ä‚†Ä
‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†Ñ‚†Ñ‚†ê‚£≤‚£¨‚£ü‚£ª‚£Ω‚£ø‚°á‚†Ñ‚†Ñ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†Ä‚†Ä
‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†Ñ‚†Ñ‚†Ñ‚†ª‚£ø‚°ø‚†ø‚£ø‚°ø‚†Å‚†∏‚†Ñ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†Ä‚†Ä
‚£ø‚£ø‚£ø‚£ø‚°ø‚¢ü‚£ã‚£Å‚£Ä‚£Ä‚†Ñ‚¢Ä‚¢Ä‚†ç‚†õ‚†ã‚¢Ä‚†Ñ‚†Ñ‚†Ñ‚¢∏‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†Ä‚†Ä
‚£ø‚°ø‚¢õ‚£•‚£∂‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£¶‚£ï‚¢∂‚£∂‚£∂‚£§‚£∞‚£∂‚£¥‚£¨‚£ç‚¢õ‚†ª‚£ø‚£ø‚£ø‚£ø‚†Ä‚†Ä
‚£ø‚¢°‚£ø‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£¶‚†ô‚†ô‚¢ö‚£ª‚£õ‚°≥‚°£‚¢Ω‚£º‚†á‚¢π‚£ø‚£ø‚£ø‚†Ä‚†Ä
‚°è‚£º‚†á‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°á‚¢à‚£†‚£§‚£∂‚£∂‚£§‚†Ñ‚†ã‚†Ñ‚†∏‚£ø‚£ø‚£ø‚†Ä‚†Ä
‚£ß‚†â‚£æ‚£Æ‚†≠‚¢Ö‚£©‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°á‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∑‚£Ñ‚†Ñ‚†Ñ‚¢π‚£ø‚£ø‚†Ä‚†Ä
‚†â‚£æ‚£ø‚£ø‚£ñ‚£≠‚†ç‚£≠‚£≠‚£ø‚£ø‚£ø‚£ø‚†ü‚£∞‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∑‚£Ñ‚†∏‚£ø‚£ø‚†Ä‚†Ä
‚†Ñ‚†â‚¢©‚£≠‚£Ö‚£ê‚£õ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†è‚£º‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£¶‚¢π‚£ø‚†Ä‚†Ä
‚£Ñ‚†Ñ‚†∏‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°è‚¢∏‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†à‚¢ø‚†Ä‚†Ä
‚£ø‚£¶‚†Ñ‚†à‚†ô‚†õ‚†ø‚†ø‚†ø‚†ø‚†õ‚£è‚°Ä‚¢π‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ü‚†ª‚¢ø‚°ø‚†ü‚†ø‚¢É‚†Ñ‚†ò‚†Ä‚†Ä
‚£ø‚£ø‚£∑‚£Ñ‚£Ä‚°Ä‚£∂‚£∂‚£∂‚£ø‚£ø‚£ø‚£Ü‚†ª‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†ø‚£∂‚°¶‚¢å‚£±‚£æ‚£ø‚°Ü‚†Ñ‚†Ä‚†Ä
‚£ø‚£ø‚£ø‚£ø‚£ø‚£á‚¢π‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∑‚£å‚°õ‚†ø‚£ø‚£ø‚£∑‚°∂‚†∂‚¢ô‚°ã‚†â‚†â‚†Ñ‚¢Ä‚†Ä‚†Ä
‚£ø‚£ø‚£ø‚£ø‚£ø‚°ø‚¢∏‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∑‚£§‚°Ä‚†Ñ‚¢†‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä"

# Arte da op√ß√£o 2 (avan√ßado/root)
ascii_bloqueio="‚†Ä‚†Ä‚†Ä‚£ø‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚°á‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚£ø‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚°á‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚£ø‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚°á‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚£ø‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚°á‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚£ø‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚°á‚†Ä‚†Ä‚†Ä
‚†Ä‚£Ä‚£†‚£ø‚£∑‚£¥‚£∂‚£∂‚£∂‚£∂‚£ø‚£ø‚£ø‚£ø‚£∂‚£∂‚£∂‚£∂‚£∂‚£ø‚£ß‚£Ä‚£Ä‚†Ä
‚¢∞‚£ø‚°ø‚†õ‚†õ‚†â‚†â‚†â‚†â‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†â‚†â‚†â‚†â‚†õ‚†õ‚¢ø‚£ø‚°Ü
‚£∏‚£ø‚†Å‚†Ä‚£Ä‚°Ä‚†Ä‚¢Ä‚°Ä‚†Ä‚¢Ä‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£Ä‚†Ä‚†à‚£ø‚£á
‚¢ø‚£ø‚†Ä‚†Ä‚†ª‚†è‚†Ä‚†ª‚†ü‚†Ä‚†ª‚†ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ª‚†ü‚†Ä‚†Ä‚£ø‚°ü
‚¢∏‚£ø‚£Ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£∞‚£ø‚°á
‚†à‚†ª‚†ø‚£ø‚£ø‚£∂‚£∂‚£∂‚£∂‚£¶‚£§‚£§‚£§‚£§‚£¥‚£∂‚£∂‚£∂‚£∂‚£ø‚£ø‚†ø‚†ü‚†Å
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†â‚†â‚†â‚†â‚†â‚†â‚†â‚†â‚†â‚†â‚†â‚†â‚†â‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä"

# Verifica se tem root (usando tsu)
tem_root() {
    if command -v tsu >/dev/null 2>&1; then
        tsu -c "whoami" | grep -q root && return 0
    fi
    return 1
}

# Fun√ß√£o: Menu inicial
menu_principal() {
    clear
    echo "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó"
    echo "‚ïë   üõ°Ô∏è Wi-Fi Guardian por Termux   ‚ïë"
    echo "‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£"
    echo "‚ïë 1. Varreduraü§ü      ‚ïë"
    echo "‚ïë 2. AVAN√áADO üö´ ‚ïë"
    echo "‚ïë 3. Fechar                 ‚ïë"
    echo "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù"
    read -p "Escolha uma op√ß√£o: " opcao
    case $opcao in
        1) modo_verdurinha ;;
        2) modo_bloqueio ;;
        3) cd && clear && exit 0 ;;
        *) echo "‚ùå Op√ß√£o inv√°lida."; sleep 1; menu_principal ;;
    esac
}

# Op√ß√£o 1: Mostrar dispositivos conectados
modo_verdurinha() {
    clear
    echo "$ascii_scan"
    echo -e "\n[üåê] Escaneando sua rede Wi-Fi...\n"

    MYIP=$(ip a | grep wlan | grep inet | awk '{print $2}' | cut -d'/' -f1)
    SUBNET=$(echo "$MYIP" | cut -d. -f1-3).0/24

    pkg install -y nmap > /dev/null 2>&1
    nmap -sn "$SUBNET" -oG /tmp/scan.txt > /dev/null

    echo -e "\nüì∂ Dispositivos encontrados:\n"
    cat /tmp/scan.txt | grep Up | while read -r linha; do
        IP=$(echo $linha | awk '{print $2}')
        HOST=$(echo $linha | awk '{print $3}')
        echo "üî∏ IP: $IP | Hostname: $HOST"
    done

    proxima_acao
}

# Op√ß√£o 2: Bloquear um dispositivo (s√≥ com root)
modo_bloqueio() {
    clear
    echo "$ascii_bloqueio"
    echo -e "\n[üß±] Verificando root...\n"

    if tem_root; then
        echo "‚úÖ Root detectado. Pronto para bloquear."
        read -p "Digite o IP do dispositivo a bloquear: " ip_alvo
        tsu -c "iptables -A INPUT -s $ip_alvo -j DROP"
        tsu -c "iptables -A FORWARD -s $ip_alvo -j DROP"
        echo -e "\nüö´ Dispositivo $ip_alvo bloqueado."
    else
        echo "‚ùå Voc√™ n√£o tem root. Instale o Magisk + tsu para usar essa op√ß√£o."
    fi

    proxima_acao
}

# Perguntar o que fazer depois
proxima_acao() {
    echo -e "\nO que deseja fazer agora?"
    echo "0 - Voltar ao menu"
    echo "# - Fechar o programa"
    read -p "Escolha: " escolha
    case $escolha in
        0) menu_principal ;;
        \#) cd && clear && exit 0 ;;
        *) echo "Op√ß√£o inv√°lida."; sleep 1; menu_principal ;;
    esac
}

# Executar
menu_principal
0
